{"ast":null,"code":"import React,{useState,useCallback,useEffect,useRef}from'react';import{useNavigate}from'react-router-dom';import io from'socket.io-client';import'./UploadPage.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const UploadPage=()=>{const[jobDescription,setJobDescription]=useState('');const[resumes,setResumes]=useState([]);const[message,setMessage]=useState('');const[isAnalyzing,setIsAnalyzing]=useState(false);const[isDragging,setIsDragging]=useState(false);const[analysisResult,setAnalysisResult]=useState(null);const[progressUpdates,setProgressUpdates]=useState([]);const[currentJobId,setCurrentJobId]=useState(null);const navigate=useNavigate();const socketRef=useRef(null);// Initialize WebSocket connection\nuseEffect(()=>{socketRef.current=io('http://127.0.0.1:5000');socketRef.current.on('connect',()=>{console.log('Connected to server');});socketRef.current.on('progress_update',data=>{console.log('Progress update:',data);setProgressUpdates(prev=>[...prev,data]);// Auto-navigate when analysis is complete\nif(data.type==='complete'&&currentJobId){setTimeout(()=>{navigate(`/jobs/${currentJobId}`);},2000);}});socketRef.current.on('disconnect',()=>{console.log('Disconnected from server');});return()=>{if(socketRef.current){socketRef.current.disconnect();}};},[navigate,currentJobId]);const handleFileChange=e=>{if(e.target.files){setResumes([...e.target.files]);}};const handleDragOver=useCallback(e=>{e.preventDefault();e.stopPropagation();setIsDragging(true);},[]);const handleDragLeave=useCallback(e=>{e.preventDefault();e.stopPropagation();setIsDragging(false);},[]);const handleDrop=useCallback(e=>{e.preventDefault();e.stopPropagation();setIsDragging(false);if(e.dataTransfer.files&&e.dataTransfer.files.length>0){setResumes([...e.dataTransfer.files]);}},[]);const handleSubmit=e=>{e.preventDefault();if(resumes.length===0){setMessage('Error: Please upload at least one résumé.');return;}setIsAnalyzing(true);setAnalysisResult(null);setMessage('');setProgressUpdates([]);setTimeout(async()=>{const formData=new FormData();formData.append('job_description',jobDescription);for(let i=0;i<resumes.length;i++){formData.append('resumes',resumes[i]);}try{const response=await fetch('/api/analyze',{method:'POST',body:formData,// Add longer timeout for AI processing\nsignal:AbortSignal.timeout(300000)// 5 minutes timeout\n});// Check if response is JSON\nconst contentType=response.headers.get('content-type');if(!contentType||!contentType.includes('application/json')){// If not JSON, get the text and show it\nconst text=await response.text();console.error('Non-JSON response:',text);throw new Error(`Server returned non-JSON response. Status: ${response.status}`);}const data=await response.json();setAnalysisResult(data);setCurrentJobId(data.job_id);if(response.ok){const processedCount=data.processed_files?data.processed_files.length:0;const skippedCount=data.skipped_files?data.skipped_files.length:0;if(processedCount>0){setMessage(`✅ Analysis completed successfully! Processed ${processedCount} resume(s). Redirecting to job page...`);setIsAnalyzing(false);// Auto-redirect to job page after 2 seconds\nsetTimeout(()=>{navigate(`/jobs/${data.job_id}`);},2000);}else{setMessage(`⚠️ No resumes were processed. ${skippedCount} files were skipped.`);setIsAnalyzing(false);}}else{throw new Error(data.error||'An error occurred during analysis.');}}catch(error){if(error.name==='TimeoutError'){setMessage(`⏱️ Analysis is taking longer than expected. Please check the Jobs page in a few minutes to see if processing completed.`);}else if(error.message.includes('non-JSON response')){setMessage(`⚠️ Analysis completed but there was a response issue. Please check the Jobs page to see your processed resumes.`);}else{setMessage(`Error: ${error.message}`);}setIsAnalyzing(false);}},100);};const getProgressTypeClass=type=>{switch(type){case'success':return'progress-success';case'error':return'progress-error';case'warning':return'progress-warning';case'processing':return'progress-processing';default:return'progress-info';}};return/*#__PURE__*/_jsx(\"div\",{className:\"upload-page-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"glass-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Analyze New Role\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Provide a job description and the corresponding r\\xE9sum\\xE9s to begin the analysis.\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"upload-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"jobDescription\",children:\"Job Description\"}),/*#__PURE__*/_jsx(\"textarea\",{id:\"jobDescription\",value:jobDescription,onChange:e=>setJobDescription(e.target.value),placeholder:\"Paste the full job description here...\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Upload R\\xE9sum\\xE9s\"}),/*#__PURE__*/_jsxs(\"div\",{className:`drop-zone ${isDragging?'dragging':''}`,onDragOver:handleDragOver,onDragLeave:handleDragLeave,onDrop:handleDrop,children:[/*#__PURE__*/_jsx(\"input\",{type:\"file\",id:\"resumes\",onChange:handleFileChange,multiple:true,className:\"drop-zone-input\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"drop-zone-prompt\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"drop-zone-icon\",children:\"\\u2601\\uFE0F\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Drag & drop files here, or click to select files\"}),/*#__PURE__*/_jsx(\"p\",{className:\"file-types\",children:\"Supports: .pdf, .docx, .txt\"})]})]}),resumes.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"file-list\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Selected Files:\"}),/*#__PURE__*/_jsx(\"ul\",{children:Array.from(resumes).map((file,index)=>/*#__PURE__*/_jsx(\"li\",{children:file.name},index))})]})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:`cta-button ${isAnalyzing?'analyzing':''}`,disabled:isAnalyzing,children:/*#__PURE__*/_jsx(\"span\",{className:\"button-text\",children:isAnalyzing?'Analyzing...':'Start Analysis'})})]}),isAnalyzing&&progressUpdates.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"progress-updates\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Analysis Progress\"}),/*#__PURE__*/_jsx(\"div\",{className:\"progress-list\",children:progressUpdates.map((update,index)=>/*#__PURE__*/_jsxs(\"div\",{className:`progress-item ${getProgressTypeClass(update.type)}`,children:[/*#__PURE__*/_jsx(\"span\",{className:\"progress-message\",children:update.message}),/*#__PURE__*/_jsx(\"span\",{className:\"progress-time\",children:new Date(update.timestamp*1000).toLocaleTimeString()})]},index))})]}),message&&/*#__PURE__*/_jsx(\"p\",{className:`message ${message.startsWith('Error')?'error':'success'}`,children:message}),analysisResult&&analysisResult.skipped_files&&analysisResult.skipped_files.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"skipped-files-report\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Skipped Files Report\"}),/*#__PURE__*/_jsx(\"ul\",{children:analysisResult.skipped_files.map((file,index)=>/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:file.filename}),\" - \",file.reason]},index))})]})]})});};export default UploadPage;","map":{"version":3,"names":["React","useState","useCallback","useEffect","useRef","useNavigate","io","jsx","_jsx","jsxs","_jsxs","UploadPage","jobDescription","setJobDescription","resumes","setResumes","message","setMessage","isAnalyzing","setIsAnalyzing","isDragging","setIsDragging","analysisResult","setAnalysisResult","progressUpdates","setProgressUpdates","currentJobId","setCurrentJobId","navigate","socketRef","current","on","console","log","data","prev","type","setTimeout","disconnect","handleFileChange","e","target","files","handleDragOver","preventDefault","stopPropagation","handleDragLeave","handleDrop","dataTransfer","length","handleSubmit","formData","FormData","append","i","response","fetch","method","body","signal","AbortSignal","timeout","contentType","headers","get","includes","text","error","Error","status","json","job_id","ok","processedCount","processed_files","skippedCount","skipped_files","name","getProgressTypeClass","className","children","onSubmit","htmlFor","id","value","onChange","placeholder","required","onDragOver","onDragLeave","onDrop","multiple","Array","from","map","file","index","disabled","update","Date","timestamp","toLocaleTimeString","startsWith","filename","reason"],"sources":["/Users/aryansrivatsavadande/Downloads/TalentVibe-v1check/frontend/src/UploadPage.js"],"sourcesContent":["import React, { useState, useCallback, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport './UploadPage.css';\n\nconst UploadPage = () => {\n    const [jobDescription, setJobDescription] = useState('');\n    const [resumes, setResumes] = useState([]);\n    const [message, setMessage] = useState('');\n    const [isAnalyzing, setIsAnalyzing] = useState(false);\n    const [isDragging, setIsDragging] = useState(false);\n    const [analysisResult, setAnalysisResult] = useState(null);\n    const [progressUpdates, setProgressUpdates] = useState([]);\n    const [currentJobId, setCurrentJobId] = useState(null);\n    const navigate = useNavigate();\n    const socketRef = useRef(null);\n\n    // Initialize WebSocket connection\n    useEffect(() => {\n        socketRef.current = io('http://127.0.0.1:5000');\n        \n        socketRef.current.on('connect', () => {\n            console.log('Connected to server');\n        });\n\n        socketRef.current.on('progress_update', (data) => {\n            console.log('Progress update:', data);\n            setProgressUpdates(prev => [...prev, data]);\n            \n            // Auto-navigate when analysis is complete\n            if (data.type === 'complete' && currentJobId) {\n                setTimeout(() => {\n                    navigate(`/jobs/${currentJobId}`);\n                }, 2000);\n            }\n        });\n\n        socketRef.current.on('disconnect', () => {\n            console.log('Disconnected from server');\n        });\n\n        return () => {\n            if (socketRef.current) {\n                socketRef.current.disconnect();\n            }\n        };\n    }, [navigate, currentJobId]);\n\n    const handleFileChange = (e) => {\n        if (e.target.files) {\n            setResumes([...e.target.files]);\n        }\n    };\n\n    const handleDragOver = useCallback((e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        setIsDragging(true);\n    }, []);\n\n    const handleDragLeave = useCallback((e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        setIsDragging(false);\n    }, []);\n    \n    const handleDrop = useCallback((e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        setIsDragging(false);\n        if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n            setResumes([...e.dataTransfer.files]);\n        }\n    }, []);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (resumes.length === 0) {\n            setMessage('Error: Please upload at least one résumé.');\n            return;\n        }\n\n        setIsAnalyzing(true);\n        setAnalysisResult(null);\n        setMessage('');\n        setProgressUpdates([]);\n\n        setTimeout(async () => {\n            const formData = new FormData();\n            formData.append('job_description', jobDescription);\n            for (let i = 0; i < resumes.length; i++) {\n                formData.append('resumes', resumes[i]);\n            }\n\n            try {\n                const response = await fetch('/api/analyze', {\n                    method: 'POST',\n                    body: formData,\n                    // Add longer timeout for AI processing\n                    signal: AbortSignal.timeout(300000) // 5 minutes timeout\n                });\n\n                // Check if response is JSON\n                const contentType = response.headers.get('content-type');\n                if (!contentType || !contentType.includes('application/json')) {\n                    // If not JSON, get the text and show it\n                    const text = await response.text();\n                    console.error('Non-JSON response:', text);\n                    throw new Error(`Server returned non-JSON response. Status: ${response.status}`);\n                }\n\n                const data = await response.json();\n                setAnalysisResult(data);\n                setCurrentJobId(data.job_id);\n\n                if (response.ok) {\n                    const processedCount = data.processed_files ? data.processed_files.length : 0;\n                    const skippedCount = data.skipped_files ? data.skipped_files.length : 0;\n                    \n                    if (processedCount > 0) {\n                        setMessage(`✅ Analysis completed successfully! Processed ${processedCount} resume(s). Redirecting to job page...`);\n                        setIsAnalyzing(false);\n                        \n                        // Auto-redirect to job page after 2 seconds\n                        setTimeout(() => {\n                            navigate(`/jobs/${data.job_id}`);\n                        }, 2000);\n                    } else {\n                        setMessage(`⚠️ No resumes were processed. ${skippedCount} files were skipped.`);\n                        setIsAnalyzing(false);\n                    }\n                } else {\n                    throw new Error(data.error || 'An error occurred during analysis.');\n                }\n            } catch (error) {\n                if (error.name === 'TimeoutError') {\n                    setMessage(`⏱️ Analysis is taking longer than expected. Please check the Jobs page in a few minutes to see if processing completed.`);\n                } else if (error.message.includes('non-JSON response')) {\n                    setMessage(`⚠️ Analysis completed but there was a response issue. Please check the Jobs page to see your processed resumes.`);\n                } else {\n                    setMessage(`Error: ${error.message}`);\n                }\n                setIsAnalyzing(false);\n            }\n        }, 100);\n    };\n\n    const getProgressTypeClass = (type) => {\n        switch (type) {\n            case 'success': return 'progress-success';\n            case 'error': return 'progress-error';\n            case 'warning': return 'progress-warning';\n            case 'processing': return 'progress-processing';\n            default: return 'progress-info';\n        }\n    };\n\n    return (\n        <div className=\"upload-page-container\">\n            <div className=\"glass-container\">\n                <h2>Analyze New Role</h2>\n                <p>Provide a job description and the corresponding résumés to begin the analysis.</p>\n                <form onSubmit={handleSubmit} className=\"upload-form\">\n                    <div className=\"form-group\">\n                        <label htmlFor=\"jobDescription\">Job Description</label>\n                        <textarea\n                            id=\"jobDescription\"\n                            value={jobDescription}\n                            onChange={(e) => setJobDescription(e.target.value)}\n                            placeholder=\"Paste the full job description here...\"\n                            required\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Upload Résumés</label>\n                        <div \n                            className={`drop-zone ${isDragging ? 'dragging' : ''}`}\n                            onDragOver={handleDragOver}\n                            onDragLeave={handleDragLeave}\n                            onDrop={handleDrop}\n                        >\n                            <input\n                                type=\"file\"\n                                id=\"resumes\"\n                                onChange={handleFileChange}\n                                multiple\n                                className=\"drop-zone-input\"\n                            />\n                            <div className=\"drop-zone-prompt\">\n                                <span className=\"drop-zone-icon\">☁️</span>\n                                <p>Drag & drop files here, or click to select files</p>\n                                <p className=\"file-types\">Supports: .pdf, .docx, .txt</p>\n                            </div>\n                        </div>\n                        {resumes.length > 0 && (\n                            <div className=\"file-list\">\n                                <h4>Selected Files:</h4>\n                                <ul>\n                                    {Array.from(resumes).map((file, index) => (\n                                        <li key={index}>{file.name}</li>\n                                    ))}\n                                </ul>\n                            </div>\n                        )}\n                    </div>\n                    <button type=\"submit\" className={`cta-button ${isAnalyzing ? 'analyzing' : ''}`} disabled={isAnalyzing}>\n                        <span className=\"button-text\">\n                            {isAnalyzing ? 'Analyzing...' : 'Start Analysis'}\n                        </span>\n                    </button>\n                </form>\n                \n                {/* Real-time Progress Updates */}\n                {isAnalyzing && progressUpdates.length > 0 && (\n                    <div className=\"progress-updates\">\n                        <h4>Analysis Progress</h4>\n                        <div className=\"progress-list\">\n                            {progressUpdates.map((update, index) => (\n                                <div key={index} className={`progress-item ${getProgressTypeClass(update.type)}`}>\n                                    <span className=\"progress-message\">{update.message}</span>\n                                    <span className=\"progress-time\">\n                                        {new Date(update.timestamp * 1000).toLocaleTimeString()}\n                                    </span>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                )}\n                \n                {message && <p className={`message ${message.startsWith('Error') ? 'error' : 'success'}`}>{message}</p>}\n                \n                {analysisResult && analysisResult.skipped_files && analysisResult.skipped_files.length > 0 && (\n                    <div className=\"skipped-files-report\">\n                        <h4>Skipped Files Report</h4>\n                        <ul>\n                            {analysisResult.skipped_files.map((file, index) => (\n                                <li key={index}><strong>{file.filename}</strong> - {file.reason}</li>\n                            ))}\n                        </ul>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default UploadPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}